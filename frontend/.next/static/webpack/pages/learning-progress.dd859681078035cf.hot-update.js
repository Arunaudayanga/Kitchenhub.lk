"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("pages/learning-progress",{

/***/ "./src/services/learningProgressService.js":
/*!*************************************************!*\
  !*** ./src/services/learningProgressService.js ***!
  \*************************************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _axiosConfig__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./axiosConfig */ \"./src/services/axiosConfig.js\");\n\nvar API_URL = \"/api/learning-progress\";\n// Fetch user's learning progress (paginated)\nvar getUserProgress = function() {\n    var page = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : 0, size = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : 10;\n    // Retrieve userId from local storage or context\n    // The backend expects userId as @AuthenticationPrincipal, which is handled by the security context based on the token.\n    // We just need to pass page and size as query params.\n    return _axiosConfig__WEBPACK_IMPORTED_MODULE_0__[\"default\"].get(\"\".concat(API_URL), {\n        params: {\n            page: page,\n            size: size\n        }\n    });\n};\n// Add a new progress update\n// NOTE: The current backend endpoint POST /api/learning-progress expects 'skillName'.\n// This might need adjustment based on the requirement to log updates like 'completed tutorial' or 'learned skill'.\n// For now, we might adapt or use a placeholder structure.\nvar addProgressUpdate = function(updateData) {\n    // updateData should contain { type: '...', description: '...' }\n    // Example adaptation: Send description as skillName, or adjust backend later.\n    // This is a placeholder implementation.\n    var skillName = \"\".concat(updateData.type, \": \").concat(updateData.description);\n    // Backend expects userId via @AuthenticationPrincipal (from token) and skillName as @RequestParam\n    return _axiosConfig__WEBPACK_IMPORTED_MODULE_0__[\"default\"].post(API_URL, updateData, {\n        params: {\n            skillName: skillName\n        }\n    });\n};\n// Placeholder for updating progress (if needed)\nvar updateProgress = function(progressId, progressDetails) {\n    // Backend expects userId via @AuthenticationPrincipal\n    return _axiosConfig__WEBPACK_IMPORTED_MODULE_0__[\"default\"].put(\"\".concat(API_URL, \"/\").concat(progressId), progressDetails);\n};\n// Placeholder for adding a milestone (if needed)\nvar addMilestone = function(progressId, milestone) {\n    // Backend expects userId via @AuthenticationPrincipal\n    return _axiosConfig__WEBPACK_IMPORTED_MODULE_0__[\"default\"].post(\"\".concat(API_URL, \"/\").concat(progressId, \"/milestones\"), milestone);\n};\n// Placeholder for completing a milestone (if needed)\nvar completeMilestone = function(progressId, milestoneIndex) {\n    // Backend expects userId via @AuthenticationPrincipal\n    return _axiosConfig__WEBPACK_IMPORTED_MODULE_0__[\"default\"].put(\"\".concat(API_URL, \"/\").concat(progressId, \"/milestones/\").concat(milestoneIndex, \"/complete\"));\n};\n// Placeholder for adding a completed resource (if needed)\nvar addCompletedResource = function(progressId, resource) {\n    // Backend expects userId via @AuthenticationPrincipal\n    return _axiosConfig__WEBPACK_IMPORTED_MODULE_0__[\"default\"].post(\"\".concat(API_URL, \"/\").concat(progressId, \"/resources\"), resource);\n};\nvar learningProgressService = {\n    getUserProgress: getUserProgress,\n    addProgressUpdate: addProgressUpdate,\n    updateProgress: updateProgress,\n    addMilestone: addMilestone,\n    completeMilestone: completeMilestone,\n    addCompletedResource: addCompletedResource\n};\n/* harmony default export */ __webpack_exports__[\"default\"] = (learningProgressService);\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvc2VydmljZXMvbGVhcm5pbmdQcm9ncmVzc1NlcnZpY2UuanMiLCJtYXBwaW5ncyI6Ijs7QUFBMEM7QUFFMUMsSUFBTUMsVUFBVTtBQUVoQiw2Q0FBNkM7QUFDN0MsSUFBTUMsa0JBQWtCO1FBQUNDLHdFQUFPLEdBQUdDLHdFQUFPO0lBQ3hDLGdEQUFnRDtJQUNoRCx1SEFBdUg7SUFDdkgsc0RBQXNEO0lBQ3RELE9BQU9KLHdEQUFpQixDQUFDLEdBQVcsT0FBUkMsVUFBVztRQUNyQ0ssUUFBUTtZQUFFSCxNQUFBQTtZQUFNQyxNQUFBQTtRQUFLO0lBQ3ZCO0FBQ0Y7QUFFQSw0QkFBNEI7QUFDNUIsc0ZBQXNGO0FBQ3RGLG1IQUFtSDtBQUNuSCwwREFBMEQ7QUFDMUQsSUFBTUcsb0JBQW9CLFNBQUNDO0lBQ3pCLGdFQUFnRTtJQUVoRSw4RUFBOEU7SUFDOUUsd0NBQXdDO0lBQ3hDLElBQU1DLFlBQVksR0FBdUJELE9BQXBCQSxXQUFXRSxJQUFJLEVBQUMsTUFBMkIsT0FBdkJGLFdBQVdHLFdBQVc7SUFFL0Qsa0dBQWtHO0lBQ2xHLE9BQU9YLHlEQUFrQixDQUFDQyxTQUFTTyxZQUFZO1FBQzdDRixRQUFRO1lBQUVHLFdBQUFBO1FBQVU7SUFDdEI7QUFDRjtBQUVBLGdEQUFnRDtBQUNoRCxJQUFNSSxpQkFBaUIsU0FBQ0MsWUFBWUM7SUFDbEMsc0RBQXNEO0lBQ3RELE9BQU9mLHdEQUFpQixDQUFDLEdBQWNjLE9BQVhiLFNBQVEsS0FBYyxPQUFYYSxhQUFjQztBQUN2RDtBQUVBLGlEQUFpRDtBQUNqRCxJQUFNRSxlQUFlLFNBQUNILFlBQVlJO0lBQ2hDLHNEQUFzRDtJQUN0RCxPQUFPbEIseURBQWtCLENBQUMsR0FBY2MsT0FBWGIsU0FBUSxLQUFjLE9BQVhhLFlBQVcsZ0JBQWNJO0FBQ25FO0FBRUEscURBQXFEO0FBQ3JELElBQU1DLG9CQUFvQixTQUFDTCxZQUFZTTtJQUNyQyxzREFBc0Q7SUFDdEQsT0FBT3BCLHdEQUFpQixDQUFDLEdBQWNjLE9BQVhiLFNBQVEsS0FBNEJtQixPQUF6Qk4sWUFBVyxnQkFBNkIsT0FBZk0sZ0JBQWU7QUFDakY7QUFFQSwwREFBMEQ7QUFDMUQsSUFBTUMsdUJBQXVCLFNBQUNQLFlBQVlRO0lBQ3hDLHNEQUFzRDtJQUN0RCxPQUFPdEIseURBQWtCLENBQUMsR0FBY2MsT0FBWGIsU0FBUSxLQUFjLE9BQVhhLFlBQVcsZUFBYVE7QUFDbEU7QUFHQSxJQUFNQywwQkFBMEI7SUFDOUJyQixpQkFBQUE7SUFDQUssbUJBQUFBO0lBQ0FNLGdCQUFBQTtJQUNBSSxjQUFBQTtJQUNBRSxtQkFBQUE7SUFDQUUsc0JBQUFBO0FBQ0Y7QUFFQSwrREFBZUUsdUJBQXVCQSxFQUFDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL3NyYy9zZXJ2aWNlcy9sZWFybmluZ1Byb2dyZXNzU2VydmljZS5qcz85ODQwIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBheGlvc0luc3RhbmNlIGZyb20gJy4vYXhpb3NDb25maWcnO1xyXG5cclxuY29uc3QgQVBJX1VSTCA9ICcvYXBpL2xlYXJuaW5nLXByb2dyZXNzJztcclxuXHJcbi8vIEZldGNoIHVzZXIncyBsZWFybmluZyBwcm9ncmVzcyAocGFnaW5hdGVkKVxyXG5jb25zdCBnZXRVc2VyUHJvZ3Jlc3MgPSAocGFnZSA9IDAsIHNpemUgPSAxMCkgPT4ge1xyXG4gIC8vIFJldHJpZXZlIHVzZXJJZCBmcm9tIGxvY2FsIHN0b3JhZ2Ugb3IgY29udGV4dFxyXG4gIC8vIFRoZSBiYWNrZW5kIGV4cGVjdHMgdXNlcklkIGFzIEBBdXRoZW50aWNhdGlvblByaW5jaXBhbCwgd2hpY2ggaXMgaGFuZGxlZCBieSB0aGUgc2VjdXJpdHkgY29udGV4dCBiYXNlZCBvbiB0aGUgdG9rZW4uXHJcbiAgLy8gV2UganVzdCBuZWVkIHRvIHBhc3MgcGFnZSBhbmQgc2l6ZSBhcyBxdWVyeSBwYXJhbXMuXHJcbiAgcmV0dXJuIGF4aW9zSW5zdGFuY2UuZ2V0KGAke0FQSV9VUkx9YCwge1xyXG4gICAgcGFyYW1zOiB7IHBhZ2UsIHNpemUgfSxcclxuICB9KTtcclxufTtcclxuXHJcbi8vIEFkZCBhIG5ldyBwcm9ncmVzcyB1cGRhdGVcclxuLy8gTk9URTogVGhlIGN1cnJlbnQgYmFja2VuZCBlbmRwb2ludCBQT1NUIC9hcGkvbGVhcm5pbmctcHJvZ3Jlc3MgZXhwZWN0cyAnc2tpbGxOYW1lJy5cclxuLy8gVGhpcyBtaWdodCBuZWVkIGFkanVzdG1lbnQgYmFzZWQgb24gdGhlIHJlcXVpcmVtZW50IHRvIGxvZyB1cGRhdGVzIGxpa2UgJ2NvbXBsZXRlZCB0dXRvcmlhbCcgb3IgJ2xlYXJuZWQgc2tpbGwnLlxyXG4vLyBGb3Igbm93LCB3ZSBtaWdodCBhZGFwdCBvciB1c2UgYSBwbGFjZWhvbGRlciBzdHJ1Y3R1cmUuXHJcbmNvbnN0IGFkZFByb2dyZXNzVXBkYXRlID0gKHVwZGF0ZURhdGEpID0+IHtcclxuICAvLyB1cGRhdGVEYXRhIHNob3VsZCBjb250YWluIHsgdHlwZTogJy4uLicsIGRlc2NyaXB0aW9uOiAnLi4uJyB9XHJcblxyXG4gIC8vIEV4YW1wbGUgYWRhcHRhdGlvbjogU2VuZCBkZXNjcmlwdGlvbiBhcyBza2lsbE5hbWUsIG9yIGFkanVzdCBiYWNrZW5kIGxhdGVyLlxyXG4gIC8vIFRoaXMgaXMgYSBwbGFjZWhvbGRlciBpbXBsZW1lbnRhdGlvbi5cclxuICBjb25zdCBza2lsbE5hbWUgPSBgJHt1cGRhdGVEYXRhLnR5cGV9OiAke3VwZGF0ZURhdGEuZGVzY3JpcHRpb259YDtcclxuXHJcbiAgLy8gQmFja2VuZCBleHBlY3RzIHVzZXJJZCB2aWEgQEF1dGhlbnRpY2F0aW9uUHJpbmNpcGFsIChmcm9tIHRva2VuKSBhbmQgc2tpbGxOYW1lIGFzIEBSZXF1ZXN0UGFyYW1cclxuICByZXR1cm4gYXhpb3NJbnN0YW5jZS5wb3N0KEFQSV9VUkwsIHVwZGF0ZURhdGEsIHsgLy8gQm9keSBpcyBudWxsIGFzIHNraWxsTmFtZSBpcyBhIFJlcXVlc3RQYXJhbVxyXG4gICAgcGFyYW1zOiB7IHNraWxsTmFtZSB9LFxyXG4gIH0pO1xyXG59O1xyXG5cclxuLy8gUGxhY2Vob2xkZXIgZm9yIHVwZGF0aW5nIHByb2dyZXNzIChpZiBuZWVkZWQpXHJcbmNvbnN0IHVwZGF0ZVByb2dyZXNzID0gKHByb2dyZXNzSWQsIHByb2dyZXNzRGV0YWlscykgPT4ge1xyXG4gIC8vIEJhY2tlbmQgZXhwZWN0cyB1c2VySWQgdmlhIEBBdXRoZW50aWNhdGlvblByaW5jaXBhbFxyXG4gIHJldHVybiBheGlvc0luc3RhbmNlLnB1dChgJHtBUElfVVJMfS8ke3Byb2dyZXNzSWR9YCwgcHJvZ3Jlc3NEZXRhaWxzKTtcclxufTtcclxuXHJcbi8vIFBsYWNlaG9sZGVyIGZvciBhZGRpbmcgYSBtaWxlc3RvbmUgKGlmIG5lZWRlZClcclxuY29uc3QgYWRkTWlsZXN0b25lID0gKHByb2dyZXNzSWQsIG1pbGVzdG9uZSkgPT4ge1xyXG4gIC8vIEJhY2tlbmQgZXhwZWN0cyB1c2VySWQgdmlhIEBBdXRoZW50aWNhdGlvblByaW5jaXBhbFxyXG4gIHJldHVybiBheGlvc0luc3RhbmNlLnBvc3QoYCR7QVBJX1VSTH0vJHtwcm9ncmVzc0lkfS9taWxlc3RvbmVzYCwgbWlsZXN0b25lKTtcclxufTtcclxuXHJcbi8vIFBsYWNlaG9sZGVyIGZvciBjb21wbGV0aW5nIGEgbWlsZXN0b25lIChpZiBuZWVkZWQpXHJcbmNvbnN0IGNvbXBsZXRlTWlsZXN0b25lID0gKHByb2dyZXNzSWQsIG1pbGVzdG9uZUluZGV4KSA9PiB7XHJcbiAgLy8gQmFja2VuZCBleHBlY3RzIHVzZXJJZCB2aWEgQEF1dGhlbnRpY2F0aW9uUHJpbmNpcGFsXHJcbiAgcmV0dXJuIGF4aW9zSW5zdGFuY2UucHV0KGAke0FQSV9VUkx9LyR7cHJvZ3Jlc3NJZH0vbWlsZXN0b25lcy8ke21pbGVzdG9uZUluZGV4fS9jb21wbGV0ZWApO1xyXG59O1xyXG5cclxuLy8gUGxhY2Vob2xkZXIgZm9yIGFkZGluZyBhIGNvbXBsZXRlZCByZXNvdXJjZSAoaWYgbmVlZGVkKVxyXG5jb25zdCBhZGRDb21wbGV0ZWRSZXNvdXJjZSA9IChwcm9ncmVzc0lkLCByZXNvdXJjZSkgPT4ge1xyXG4gIC8vIEJhY2tlbmQgZXhwZWN0cyB1c2VySWQgdmlhIEBBdXRoZW50aWNhdGlvblByaW5jaXBhbFxyXG4gIHJldHVybiBheGlvc0luc3RhbmNlLnBvc3QoYCR7QVBJX1VSTH0vJHtwcm9ncmVzc0lkfS9yZXNvdXJjZXNgLCByZXNvdXJjZSk7XHJcbn07XHJcblxyXG5cclxuY29uc3QgbGVhcm5pbmdQcm9ncmVzc1NlcnZpY2UgPSB7XHJcbiAgZ2V0VXNlclByb2dyZXNzLFxyXG4gIGFkZFByb2dyZXNzVXBkYXRlLFxyXG4gIHVwZGF0ZVByb2dyZXNzLCAvLyBFeHBvcnQgaWYgbmVlZGVkIGxhdGVyXHJcbiAgYWRkTWlsZXN0b25lLCAvLyBFeHBvcnQgaWYgbmVlZGVkIGxhdGVyXHJcbiAgY29tcGxldGVNaWxlc3RvbmUsIC8vIEV4cG9ydCBpZiBuZWVkZWQgbGF0ZXJcclxuICBhZGRDb21wbGV0ZWRSZXNvdXJjZSwgLy8gRXhwb3J0IGlmIG5lZWRlZCBsYXRlclxyXG59O1xyXG5cclxuZXhwb3J0IGRlZmF1bHQgbGVhcm5pbmdQcm9ncmVzc1NlcnZpY2U7Il0sIm5hbWVzIjpbImF4aW9zSW5zdGFuY2UiLCJBUElfVVJMIiwiZ2V0VXNlclByb2dyZXNzIiwicGFnZSIsInNpemUiLCJnZXQiLCJwYXJhbXMiLCJhZGRQcm9ncmVzc1VwZGF0ZSIsInVwZGF0ZURhdGEiLCJza2lsbE5hbWUiLCJ0eXBlIiwiZGVzY3JpcHRpb24iLCJwb3N0IiwidXBkYXRlUHJvZ3Jlc3MiLCJwcm9ncmVzc0lkIiwicHJvZ3Jlc3NEZXRhaWxzIiwicHV0IiwiYWRkTWlsZXN0b25lIiwibWlsZXN0b25lIiwiY29tcGxldGVNaWxlc3RvbmUiLCJtaWxlc3RvbmVJbmRleCIsImFkZENvbXBsZXRlZFJlc291cmNlIiwicmVzb3VyY2UiLCJsZWFybmluZ1Byb2dyZXNzU2VydmljZSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./src/services/learningProgressService.js\n"));

/***/ })

});